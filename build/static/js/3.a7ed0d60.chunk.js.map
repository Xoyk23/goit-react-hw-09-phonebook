{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactsList/ContactItem/ContactItem.module.css","Components/ContactsList/ContactsList.module.css","Components/Filter/Filter.module.css","Pages/UserPage/UserPage.module.css","../node_modules/uuid/dist/esm-browser/rng.js","redux/contactsItems/contacts-selectors.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","Components/ContactForm/ContactForm.jsx","redux/contactsItems/contacts-operations.js","Components/ContactsList/ContactItem/ContactItem.jsx","Components/ContactsList/ContactsList.jsx","Components/Filter/Filter.jsx","Pages/UserPage/Contacts.jsx"],"names":["module","exports","getRandomValues","getContacts","state","contacts","getFilter","filter","getFilteredContacts","createSelector","name","toLowerCase","includes","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","i","push","toString","substr","stringify","arr","offset","arguments","length","undefined","TypeError","v4","options","buf","rnds","random","ContactForm","number","heandleInput","e","setState","currentTarget","value","addNewContact","preventDefault","props","onSubmit","id","uuidv4","passNewContact","newName","pass","forEach","alert","className","styles","form","this","label","input","type","onChange","required","example","pattern","button","Component","connect","dispatch","contact","a","addContactRequest","axios","post","then","data","addContactSucces","catch","error","addContactError","addContact","ContactItem","deleteOnClick","item","onClick","contactId","target","deleteContactRequest","delete","deleteContactSucces","deleteContactError","list","map","changeFilter","container","App","fetchContacts","title","fetchContactRequest","get","fetchContactSucces","fetchContactError"],"mappings":"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","file":"static/js/3.a7ed0d60.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3n-XS\",\"label\":\"ContactForm_label__CMHTk\",\"input\":\"ContactForm_input__knaCb\",\"example\":\"ContactForm_example__3KvUZ\",\"button\":\"ContactForm_button__9AkCP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactItem_contact__pKNdE\",\"item\":\"ContactItem_item__beDkN\",\"button\":\"ContactItem_button__29bs5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__14phZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__4wUQq\",\"label\":\"Filter_label__3_PkQ\",\"input\":\"Filter_input__1biZY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserPage_container__IHCXq\",\"title\":\"UserPage_title__17iCS\"};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.contacts;\r\n\r\nconst getFilter = state => state.filter;\r\n\r\nconst getContactsLengths = state => getContacts(state).length;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) =>\r\n    contacts.filter(\r\n      ({ name }) => name && name.toLowerCase().includes(filter.toLowerCase()),\r\n    ),\r\n);\r\n\r\nexport { getContacts, getFilter, getFilteredContacts, getContactsLengths };\r\n","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { addContact } from '../../redux/contactsItems/contacts-operations';\r\n\r\nimport { getContacts } from '../../redux/contactsItems/contacts-selectors';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  heandleInput = e => {\r\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\r\n  };\r\n\r\n  addNewContact = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit({ id: uuidv4(), ...this.state });\r\n\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  passNewContact = (newName, number) => {\r\n    let pass = true;\r\n\r\n    this.state.contacts.forEach(({ name }) => {\r\n      if (name.toLowerCase() === newName.toLowerCase()) {\r\n        alert(`${name} is already in your contacts list`);\r\n        pass = false;\r\n      }\r\n    });\r\n\r\n    if (newName === '' || number === '') {\r\n      alert(`Please whrite all info`);\r\n      pass = false;\r\n    }\r\n\r\n    return pass;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.form} onSubmit={this.addNewContact}>\r\n        <label className={styles.label}>\r\n          Name:\r\n          <input\r\n            className={styles.input}\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            onChange={this.heandleInput}\r\n            required\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Phone number<span className={styles.example}>(000-00-00)</span>:\r\n          <input\r\n            className={styles.input}\r\n            name=\"number\"\r\n            type=\"tel\"\r\n            pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\r\n            value={this.state.number}\r\n            onChange={this.heandleInput}\r\n            required\r\n          />\r\n        </label>\r\n        <button className={styles.button} type=\"submit\">\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: contact => dispatch(addContact(contact)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import axios from 'axios';\r\n\r\nimport {\r\n  fetchContactRequest,\r\n  fetchContactSucces,\r\n  fetchContactError,\r\n  addContactRequest,\r\n  addContactSucces,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSucces,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\n\r\n// axios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactSucces(data)))\r\n    .catch(error => dispatch(fetchContactError(error)));\r\n};\r\n\r\nconst addContact = contact => async dispatch => {\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSucces(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nconst deleteContact = contactId => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(({ data }) => dispatch(deleteContactSucces(contactId)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n\r\nexport { fetchContacts, addContact, deleteContact };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './ContactItem.module.css';\r\n\r\nconst ContactItem = ({ name, number, id, deleteOnClick }) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      <div className={styles.contact}>\r\n        <span>{name}</span>\r\n        <span>{number}</span>\r\n      </div>\r\n\r\n      <button className={styles.button} id={id} onClick={deleteOnClick}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  deleteOnClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { deleteContact } from '../../redux/contactsItems/contacts-operations';\r\n\r\nimport { getFilteredContacts } from '../../redux/contactsItems/contacts-selectors';\r\n\r\nimport ContactsItem from './ContactItem';\r\n\r\nimport styles from './ContactsList.module.css';\r\n\r\nconst ContactsList = ({ contacts, deleteOnClick }) => {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactsItem\r\n          key={id}\r\n          name={name}\r\n          number={number}\r\n          id={id}\r\n          deleteOnClick={deleteOnClick}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  deleteOnClick: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getFilteredContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteOnClick: e => dispatch(deleteContact(e.target.id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getFilter } from '../../redux/contactsItems/contacts-selectors';\r\n\r\nimport { changeFilter } from '../../redux/filter/filter-actions';\r\n\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <label className={styles.label}>\r\n        Filter:\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport ContactForm from '../../Components/ContactForm';\r\nimport ContactsList from '../../Components/ContactsList';\r\nimport Filter from '../../Components/Filter';\r\n\r\nimport { fetchContacts } from '../../redux/contactsItems/contacts-operations';\r\n// import { getContactsLengths } from '../redux/contactsItems/contacts-selectors';\r\n\r\nimport styles from './UserPage.module.css';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.container}>\r\n        <h1 className={styles.title}>Phonebook</h1>\r\n        <ContactForm />\r\n        <h2 className={styles.title}>Contacts</h2>\r\n        <Filter />\r\n        <ContactsList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = state => ({\r\n//   contactsLength: getContactsLengths(state),\r\n// });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContacts: () => dispatch(fetchContacts()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n"],"sourceRoot":""}