{"version":3,"sources":["Components/AppBar/AppBar.module.css","Components/AuthMenu/AuthMenu.module.css","Components/UserMenu/UserMenu.module.css","redux/auth/auth-operations.js","redux/auth/auth-actions.js","Components/Container/Container.module.css","redux/filter/filter-actions.js","redux/contactsItems/contacts-actions.js","redux/middleware.js","redux/contactsItems/contacts-reducer.js","redux/filter/filter-reducer.js","redux/auth/auth-persist-config.js","redux/auth/auth-selectors.js","redux/auth/auth-reducer.js","redux/store.js","routes.js","Components/PrivateRoute/PrivateRoute.js","Components/PublicRoute/PublicRoute.js","Components/UserMenu/defaultAvatar.png","Components/UserMenu/UserMenu.jsx","Components/AuthMenu/AuthMenu.jsx","Components/AppBar/AppBar.jsx","Components/Container/Container.jsx","App.js","index.js"],"names":["module","exports","axios","defaults","baseURL","token","headers","common","registerUser","credentials","dispatch","a","registerRequest","post","data","registerSuccess","registerError","message","loginUser","user","loginRequest","loginSuccess","loginError","logOutUser","logoutRequest","logoutSuccess","logoutError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","createAction","changeFilter","fetchContactRequest","fetchContactSucces","fetchContactError","addContactRequest","addContactSucces","addContactError","deleteContactRequest","deleteContactSucces","deleteContactError","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsReducer","createReducer","_","payload","state","filter","contact","id","error","filterReducer","authPersistConfig","key","storage","whitelist","getIsAuthenticated","isAuthenticated","getUserName","name","initialUserState","email","pasword","loading","errorFunc","combineReducers","reducer","persistReducer","authReducer","contacts","store","configureStore","devTools","process","persistor","persistStore","routes","home","register","login","connect","Component","component","redirectTo","routeProps","render","props","to","restricted","mapDispatchToProps","onLogout","avatar","defaultAvatar","className","styles","container","src","alt","width","height","userName","type","onClick","button","AuthMenu","link","activeClassName","active","exact","header","nav","list","item","Container","children","MainCont","HomePage","lazy","UserPage","LoginPage","RegisterPage","App","this","fallback","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d396701.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__yTKxl\",\"nav\":\"AppBar_nav__eDm73\",\"list\":\"AppBar_list__32lzQ\",\"link\":\"AppBar_link__2NA8S\",\"active\":\"AppBar_active__1AKC8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthMenu_link__3sZs9\",\"active\":\"AuthMenu_active__JAPLB\",\"container\":\"AuthMenu_container__2xgf6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__1uTAK\",\"button\":\"UserMenu_button__sTfrZ\",\"userName\":\"UserMenu_userName__2q3LD\",\"avatar\":\"UserMenu_avatar__2UH5W\"};","import axios from 'axios';\r\nimport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common['Authorization'] = `${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common['Authorization'] = '';\r\n  },\r\n};\r\n\r\nconst registerUser = credentials => async dispatch => {\r\n  dispatch(registerRequest());\r\n  try {\r\n    const { data } = await axios.post('./users/signup', credentials);\r\n    token.set(data.token);\r\n    dispatch(registerSuccess(data));\r\n  } catch (error) {\r\n    dispatch(registerError(error.message));\r\n  }\r\n};\r\n\r\nconst loginUser = user => async dispatch => {\r\n  dispatch(loginRequest());\r\n  try {\r\n    const { data } = await axios.post('/users/login', user);\r\n    token.set(data.token);\r\n    dispatch(loginSuccess(data));\r\n  } catch (error) {\r\n    dispatch(loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logOutUser = () => async dispatch => {\r\n  dispatch(logoutRequest());\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n    dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) return;\r\n\r\n  token.set(persistedToken);\r\n  dispatch(getCurrentUserRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/users/current');\r\n    dispatch(getCurrentUserSuccess(data));\r\n\r\n    return data;\r\n  } catch (error) {\r\n    dispatch(getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nexport { registerUser, loginUser, logOutUser, getCurrentUser };\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__2kIJN\",\"MainCont\":\"Container_MainCont__1xZJT\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const changeFilter = createAction('filter/changed');\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst fetchContactRequest = createAction('contacts/fetchRequest');\r\nconst fetchContactSucces = createAction('contacts/fetchSucces');\r\nconst fetchContactError = createAction('contacts/fetchError');\r\n\r\nconst addContactRequest = createAction('contacts/createRequest');\r\nconst addContactSucces = createAction('contacts/createSucces');\r\nconst addContactError = createAction('contacts/createError');\r\n\r\nconst deleteContactRequest = createAction('contacts/deleteRequest');\r\nconst deleteContactSucces = createAction('contacts/deleteSucces');\r\nconst deleteContactError = createAction('contacts/deleteError');\r\n\r\nexport {\r\n  fetchContactRequest,\r\n  fetchContactSucces,\r\n  fetchContactError,\r\n  addContactRequest,\r\n  addContactSucces,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSucces,\r\n  deleteContactError,\r\n};\r\n","import { getDefaultMiddleware } from '@reduxjs/toolkit';\r\n\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nexport { middleware, persistStore, persistReducer };\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactRequest,\r\n  fetchContactSucces,\r\n  fetchContactError,\r\n  addContactRequest,\r\n  addContactSucces,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSucces,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\n\r\nconst contactsReducer = createReducer([], {\r\n  [fetchContactSucces]: (_, { payload }) => [...payload],\r\n  [addContactSucces]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSucces]: (state, { payload }) => [\r\n    ...state.filter(contact => contact.id !== payload),\r\n  ],\r\n});\r\n\r\nconst loadingReducer = createReducer(false, {\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSucces]: () => false,\r\n  [fetchContactError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSucces]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSucces]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst errorReducer = createReducer(null, {\r\n  [fetchContactError]: error => error,\r\n  [addContactError]: error => error,\r\n  [deleteContactError]: error => error,\r\n});\r\n\r\nexport { contactsReducer, loadingReducer, errorReducer };\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { changeFilter } from './filter-actions';\r\n\r\nexport const filterReducer = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n","import storage from 'redux-persist/lib/storage';\r\n\r\n// Cохраняет токен в локал сторедж\r\n\r\nconst authPersistConfig = {\r\n  key: 'token',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport default authPersistConfig;\r\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\n// const getIsAuthenticated = state => state.auth.token;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nexport { getIsAuthenticated, getUserName };\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from './auth-actions';\r\n\r\nimport { getIsAuthenticated } from './auth-selectors';\r\n\r\nconst initialUserState = { name: null, email: null, pasword: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [registerSuccess]: (_, { payload }) => payload.user,\r\n  [loginSuccess]: (_, { payload }) => payload.user,\r\n  [logoutSuccess]: () => initialUserState,\r\n  [logoutError]: () => initialUserState,\r\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\nconst token = createReducer(null, {\r\n  [registerSuccess]: (_, { payload }) => payload.token,\r\n  [loginSuccess]: (_, { payload }) => payload.token,\r\n  [logoutSuccess]: () => null,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [registerSuccess]: () => true,\r\n  [registerError]: () => false,\r\n  [loginSuccess]: () => true,\r\n  [loginError]: () => false,\r\n  [getCurrentUserSuccess]: () => true,\r\n  [getCurrentUserError]: () => false,\r\n  [logoutSuccess]: () => false,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [registerRequest]: () => true,\r\n  [registerSuccess]: () => false,\r\n  [registerError]: () => false,\r\n  [loginRequest]: () => true,\r\n  [loginSuccess]: () => false,\r\n  [loginError]: () => false,\r\n  [logoutRequest]: () => true,\r\n  [logoutSuccess]: () => false,\r\n  [logoutError]: () => false,\r\n  [getCurrentUserRequest]: () => true,\r\n  [getCurrentUserSuccess]: () => false,\r\n  [getCurrentUserError]: () => false,\r\n});\r\n\r\nconst errorFunc = (_, { payload }) => payload;\r\nconst error = createReducer(null, {\r\n  [registerError]: errorFunc,\r\n  [loginError]: errorFunc,\r\n  [logoutError]: errorFunc,\r\n  [getCurrentUserError]: errorFunc,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n  isAuthenticated,\r\n  loading,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport { middleware, persistStore, persistReducer } from './middleware';\r\n\r\nimport { contactsReducer } from './contactsItems/contacts-reducer';\r\n\r\nimport { filterReducer } from './filter/filter-reducer';\r\nimport authPersistConfig from './auth/auth-persist-config';\r\nimport authReducer from './auth/auth-reducer';\r\n\r\nconst reducer = {\r\n  auth: persistReducer(authPersistConfig, authReducer),\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// /* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\r\nexport { store, persistor };\r\n","const routes = {\r\n  home: '/',\r\n  register: '/register',\r\n  login: '/login',\r\n  contacts: '/contacts',\r\n};\r\n\r\nexport default routes;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\r\n * - В противном случае рендерит компонент\r\n */\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","export default __webpack_public_path__ + \"static/media/defaultAvatar.e77d6fc7.png\";","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { logOutUser } from '../../redux/auth/auth-operations';\r\n\r\nimport { getUserName } from '../../redux/auth/auth-selectors';\r\n\r\nimport styles from './UserMenu.module.css';\r\n\r\nimport defaultAvatar from './defaultAvatar.png';\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <img\r\n        className={styles.avatar}\r\n        src={avatar}\r\n        alt=\"\"\r\n        width=\"32px\"\r\n        height=\"32px\"\r\n      />\r\n      <p className={styles.userName}>{name}</p>\r\n      <button type=\"button\" onClick={onLogout} className={styles.button}>\r\n        Logout\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  name: getUserName(state),\r\n  avatar: defaultAvatar,\r\n});\r\nconst mapDispatchToProps = {\r\n  onLogout: logOutUser,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport routes from '../../routes';\r\n\r\nimport styles from './AuthMenu.module.css';\r\n\r\nconst AuthMenu = () => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <NavLink\r\n        className={styles.link}\r\n        activeClassName={styles.active}\r\n        to={routes.register}\r\n        exact\r\n      >\r\n        Register\r\n      </NavLink>\r\n      <NavLink\r\n        className={styles.link}\r\n        activeClassName={styles.active}\r\n        to={routes.login}\r\n        exact\r\n      >\r\n        Login\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthMenu;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport UserMenu from '../UserMenu';\r\nimport AuthMenu from '../AuthMenu';\r\n\r\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\r\n\r\nimport styles from './AppBar.module.css';\r\nimport routes from '../../routes';\r\n\r\nconst AppBar = ({ isAuthenticated }) => {\r\n  return (\r\n    <div className={styles.header}>\r\n      <nav className={styles.nav}>\r\n        <ul className={styles.list}>\r\n          <li>\r\n            <NavLink\r\n              className={styles.link}\r\n              activeClassName={styles.active}\r\n              to={routes.home}\r\n              exact\r\n            >\r\n              Home\r\n            </NavLink>\r\n          </li>\r\n          {isAuthenticated && (\r\n            <li className={styles.item}>\r\n              <NavLink\r\n                to={routes.contacts}\r\n                className={styles.link}\r\n                activeClassName={styles.active}\r\n              >\r\n                Contacts\r\n              </NavLink>\r\n            </li>\r\n          )}\r\n        </ul>\r\n        {isAuthenticated ? <UserMenu /> : <AuthMenu />}\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import React from 'react';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.MainCont}>\r\n    <div className={styles.Container}>{children}</div>\r\n  </div>\r\n);\r\n\r\nexport default Container;\r\n","import React, { Component, Suspense, lazy } from 'react';\r\nimport { Switch, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport routes from './routes';\r\nimport { getCurrentUser } from './redux/auth/auth-operations';\r\n\r\nimport PrivateRoute from './Components/PrivateRoute/PrivateRoute';\r\nimport PublicRoute from './Components/PublicRoute';\r\nimport AppBar from './Components/AppBar';\r\nimport Container from './Components/Container';\r\n// import Loading from './Components/Loading';\r\n\r\nconst HomePage = lazy(() => import('./Pages/HomePage'));\r\nconst UserPage = lazy(() => import('./Pages/UserPage'));\r\nconst LoginPage = lazy(() => import('./Pages/LoginPage'));\r\nconst RegisterPage = lazy(() => import('./Pages/RegisterPage'));\r\n\r\nclass App extends Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    this.props.getCurrentUser();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <AppBar />\r\n        <Container>\r\n          <Suspense fallback={<p>Грузится...</p>}>\r\n            <Switch>\r\n              <PublicRoute exact path={routes.home} component={HomePage} />\r\n              <PrivateRoute\r\n                path={routes.contacts}\r\n                component={UserPage}\r\n                redirectTo={routes.login}\r\n              />\r\n              <PublicRoute\r\n                path={routes.login}\r\n                restricted\r\n                component={LoginPage}\r\n                redirectTo={routes.contacts}\r\n              />\r\n              <PublicRoute\r\n                path={routes.register}\r\n                restricted\r\n                component={RegisterPage}\r\n                redirectTo={routes.contacts}\r\n              />\r\n              <Redirect to={routes.home} />\r\n            </Switch>\r\n          </Suspense>\r\n          {/* <Loading /> */}\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getCurrentUser: getCurrentUser,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { store, persistor } from './redux/store';\r\nimport App from './App';\r\n\r\n// import './styles/animation.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}