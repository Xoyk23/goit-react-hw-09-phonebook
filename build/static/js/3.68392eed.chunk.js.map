{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","Components/ContactForm/ContactForm.module.css","Components/ContactsList/ContactItem/ContactItem.module.css","Components/ContactsList/ContactsList.module.css","Components/Filter/Filter.module.css","Pages/UserPage/UserPage.module.css","redux/contactsItems/contacts-selectors.js","Components/ContactForm/ContactForm.jsx","redux/contactsItems/contacts-operations.js","Components/ContactsList/ContactItem/ContactItem.jsx","Components/ContactsList/ContactsList.jsx","Components/Filter/Filter.jsx","Pages/UserPage/Contacts.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","getContacts","state","contacts","getFilter","filter","getFilteredContacts","createSelector","name","toLowerCase","includes","ContactForm","dispatch","useDispatch","useState","setName","number","setNumber","useSelector","onSubmit","a","contact","addContactRequest","axios","post","then","data","addContactSucces","catch","error","addContactError","addContact","handleChange","e","target","console","warn","className","styles","form","preventDefault","find","item","alert","label","input","type","onChange","required","example","pattern","button","ContactItem","id","deleteOnClick","onClick","ContactsList","contactId","deleteContactRequest","delete","deleteContactSucces","deleteContactError","list","map","Filter","container","changeFilter","App","useEffect","fetchContactRequest","get","fetchContactSucces","fetchContactError","title"],"mappings":"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","file":"static/js/3.68392eed.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1bus6\",\"label\":\"ContactForm_label__17ME6\",\"input\":\"ContactForm_input__2XGo1\",\"example\":\"ContactForm_example__1l4pJ\",\"button\":\"ContactForm_button__13G7W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactItem_contact__35Oii\",\"item\":\"ContactItem_item__1Effy\",\"button\":\"ContactItem_button__3wHgA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__22KyZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__DGD62\",\"label\":\"Filter_label__3-9Ky\",\"input\":\"Filter_input__3vsjA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserPage_container__3SO28\",\"title\":\"UserPage_title__2QkB1\"};","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.contacts;\r\n\r\nconst getFilter = state => state.filter;\r\n\r\nconst getContactsLengths = state => getContacts(state).length;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) =>\r\n    contacts.filter(\r\n      ({ name }) => name && name.toLowerCase().includes(filter.toLowerCase()),\r\n    ),\r\n);\r\n\r\nexport { getContacts, getFilter, getFilteredContacts, getContactsLengths };\r\n","import React, { useState } from 'react';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { addContact } from '../../redux/contactsItems/contacts-operations';\r\n\r\nimport { getContacts } from '../../redux/contactsItems/contacts-selectors';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './ContactForm.module.css';\r\n\r\nexport default function ContactForm() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const contacts = useSelector(getContacts);\r\n  const onSubmit = (name, number) => dispatch(addContact(name, number));\r\n\r\n  // heandleInput = e => {\r\n  //   this.setState({ [e.currentTarget.name]: e.currentTarget.value });\r\n  // };\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        console.warn(`Тип поля name - ${name} не обрабатывается!`);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (name === '') {\r\n      alert(`Please whrite all info`);\r\n      return;\r\n    }\r\n    if (number === '') {\r\n      alert(`Please whrite all info`);\r\n      return;\r\n    }\r\n    if (contacts.find(item => item.name.toLowerCase() === name.toLowerCase())) {\r\n      alert(`Contact is already in your contacts list`);\r\n      return;\r\n    }\r\n\r\n    onSubmit(name, number);\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={handleSubmit}>\r\n      <label className={styles.label}>\r\n        Name:\r\n        <input\r\n          className={styles.input}\r\n          name=\"name\"\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <label className={styles.label}>\r\n        Phone number<span className={styles.example}>(000-00-00)</span>:\r\n        <input\r\n          className={styles.input}\r\n          name=\"number\"\r\n          type=\"tel\"\r\n          pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <button className={styles.button} type=\"submit\">\r\n        Add Contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  onSubmit: PropTypes.func,\r\n};\r\n","import axios from 'axios';\r\n\r\nimport {\r\n  fetchContactRequest,\r\n  fetchContactSucces,\r\n  fetchContactError,\r\n  addContactRequest,\r\n  addContactSucces,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSucces,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\n\r\n// axios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactSucces(data)))\r\n    .catch(error => dispatch(fetchContactError(error)));\r\n};\r\n\r\nconst addContact = (name, number) => async dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSucces(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nconst deleteContact = contactId => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(({ data }) => dispatch(deleteContactSucces(contactId)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n\r\nexport { fetchContacts, addContact, deleteContact };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './ContactItem.module.css';\r\n\r\nconst ContactItem = ({ name, number, id, deleteOnClick }) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      <div className={styles.contact}>\r\n        <span>{name}</span>\r\n        <span>{number}</span>\r\n      </div>\r\n\r\n      <button className={styles.button} id={id} onClick={deleteOnClick}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  deleteOnClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { deleteContact } from '../../redux/contactsItems/contacts-operations';\r\n\r\nimport { getFilteredContacts } from '../../redux/contactsItems/contacts-selectors';\r\n\r\nimport ContactsItem from './ContactItem';\r\n\r\nimport styles from './ContactsList.module.css';\r\n\r\nexport default function ContactsList() {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getFilteredContacts);\r\n  const deleteOnClick = id => dispatch(deleteContact(id));\r\n\r\n  return (\r\n    <ul className={styles.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactsItem\r\n          key={id}\r\n          name={name}\r\n          number={number}\r\n          id={id}\r\n          deleteOnClick={() => deleteOnClick(id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  deleteOnClick: PropTypes.func,\r\n};\r\n\r\n// const mapStateToProps = state => ({\r\n//   contacts: getFilteredContacts(state),\r\n// });\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   deleteOnClick: e => dispatch(deleteContact(e.target.id)),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { getFilter } from '../../redux/contactsItems/contacts-selectors';\r\n\r\nimport { changeFilter } from '../../redux/filter/filter-actions';\r\n\r\nimport styles from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n  const value = useSelector(getFilter);\r\n  const onChange = e => dispatch(changeFilter(e.target.value));\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <label className={styles.label}>\r\n        Filter:\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport ContactForm from '../../Components/ContactForm';\r\nimport ContactsList from '../../Components/ContactsList';\r\nimport Filter from '../../Components/Filter';\r\n\r\nimport { fetchContacts } from '../../redux/contactsItems/contacts-operations';\r\n// import { getContactsLengths } from '../redux/contactsItems/contacts-selectors';\r\n\r\nimport styles from './UserPage.module.css';\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h1 className={styles.title}>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2 className={styles.title}>Contacts</h2>\r\n      <Filter />\r\n      <ContactsList />\r\n    </div>\r\n  );\r\n}\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   fetchContacts: () => dispatch(fetchContacts()),\r\n// });\r\n"],"sourceRoot":""}